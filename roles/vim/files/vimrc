" *****************************************************************************
" PLUGINS
" *****************************************************************************
call plug#begin('~/.vim/plugged')
let g:plug_timeout=900

" -----------------------------------------------------------------------------
" GENERAL UTILITIES
" -----------------------------------------------------------------------------
" Fast asynchronous invocations
Plug 'Shougo/vimproc', {'do': 'make'}
" Repeat complex commands with .
Plug 'tpope/vim-repeat'
" -----------------------------------------------------------------------------
" NAVIGATION
" -----------------------------------------------------------------------------
" Project explorer
Plug 'scrooloose/nerdtree'
let NERDTreeMinimalUI=1
let NERDTreeMapJumpNextSibling=''
let NERDTreeMapJumpPrevSibling=''
let NERDTreeAutoDeleteBuffer=0
let NERDTreeCascadeOpenSingleChildDir=0
let NERDTreeBookmarksFile=expand("$HOME/.vim/bookmarks")
" Improved % navigation matching
Plug 'vim-scripts/matchit.zip'
" Match HTML tags in % navigation
Plug 'gregsexton/MatchTag'
" Quick mark navigation
Plug 'kshenoy/vim-signature'
" -----------------------------------------------------------------------------
" EXTERNAL MAPPINGS
" -----------------------------------------------------------------------------
" Paired mappings
Plug 'tpope/vim-unimpaired'
" -----------------------------------------------------------------------------
" UI
" -----------------------------------------------------------------------------
" Colorscheme
Plug 'altercation/vim-colors-solarized'
let g:solarized_termtrans = 1
" Powerfull status line
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
let g:airline_left_sep=''
let g:airline_right_sep=''
" Automatic window resizing
Plug 'roman/golden-ratio'
" Indent guides
Plug 'nathanaelkane/vim-indent-guides'
let g:indent_guides_enable_on_vim_startup = 1
" Rainbow parentheses
Plug 'luochen1990/rainbow'
let g:rainbow_active = 1
let g:rainbow_conf = {
      \   'ctermfgs': ['darkred', 'darkgreen', 'darkyellow', 'darkblue', 'darkcyan', 'darkmagenta'],
      \}
" -----------------------------------------------------------------------------
" TMUX
" -----------------------------------------------------------------------------
" Easy tmux navigation
Plug 'christoomey/vim-tmux-navigator'
" -----------------------------------------------------------------------------
" UNITE
" -----------------------------------------------------------------------------
" Unite itself
Plug 'Shougo/unite.vim'
let g:unite_source_grep_command = 'ag'
let g:unite_source_grep_default_opts = '-i --vimgrep --hidden'
let g:unite_source_grep_recursive_opt = ''
let g:unite_source_rec_async_command = ['ag', '--nocolor', '--nogroup', '--ignore', '".git"', '--hidden', '-g', '']
nnoremap <leader>uf :Unite -start-insert -verbose file_rec/async:!<cr>
nnoremap <leader>uj :Unite -start-insert jump<cr>
nnoremap <leader>ub :Unite -start-insert buffer<cr>
nnoremap <leader>ug :Unite -start-insert grep:.<cr>
nnoremap <leader>ut :Unite -start-insert tab<cr>
" Source for file outline
Plug 'Shougo/unite-outline'
nnoremap <leader>uo :Unite -start-insert outline<cr>
" -----------------------------------------------------------------------------
" TEXT EDITING
" -----------------------------------------------------------------------------
" Comment and uncomment code
Plug 'tpope/vim-commentary'
" Smart scope delimiters
Plug 'tpope/vim-endwise'
" Surround expressions
Plug 'tpope/vim-surround'
" Aligning
Plug 'junegunn/vim-easy-align'
nmap ga <Plug>(EasyAlign)
xmap ga <Plug>(EasyAlign)
" Register previewing
Plug 'junegunn/vim-peekaboo'
let g:peekaboo_delay = 750
" -----------------------------------------------------------------------------
" GENERAL DEVELOPMENT
" -----------------------------------------------------------------------------
" Syntax checking on save
Plug 'scrooloose/syntastic'
let g:syntastic_javascript_checkers = ["eslint"]
let g:syntastic_javascript_eslint_exe = '$(npm bin)/eslint'
" Completions
Plug 'Valloric/YouCompleteMe', {'do': './install.py --tern-completer'}
let g:ycm_key_list_select_completion = ['<C-n>']
let g:ycm_key_list_previous_completion = ['<C-p>']
let g:ycm_use_ultisnips_complete = 1
" Snippets
Plug 'SirVer/ultisnips'
let g:UltiSnipsSnippetsDir = '~/.vim/ultisnips'
let g:UltiSnipsSnippetDirectories=['ultisnips']
let g:UltiSnipsEditSplit = 'context'
let g:UltiSnipsExpandTrigger = '<tab>'
let g:UltiSnipsJumpForwardTrigger = '<c-j>'
let g:UltiSnipsJumpBackwardTrigger = '<c-k>'
nnoremap <leader>s :UltiSnipsEdit<cr>
" Fugitive
Plug 'tpope/vim-fugitive'
" -----------------------------------------------------------------------------
" VIEWS AND TEMPLATES
" -----------------------------------------------------------------------------
" Advanced css syntax
Plug 'JulesWang/css.vim'
" LESS syntax
Plug 'genoma/vim-less'
" SCSS syntax
Plug 'cakebaker/scss-syntax.vim'
" HTML5 syntax
Plug 'othree/html5.vim'
" Fast expansion for html tags
Plug 'mattn/emmet-vim'
" SLIM templates
Plug 'slim-template/vim-slim'
" -----------------------------------------------------------------------------
" JAVASCRIPT
" -----------------------------------------------------------------------------
" Additional javascript syntax
Plug 'pangloss/vim-javascript'
" JSX syntax
Plug 'mxw/vim-jsx'
" JSON syntax
Plug 'leshill/vim-json'
" -----------------------------------------------------------------------------
" RUBY
" -----------------------------------------------------------------------------
" Ruby syntax highlighting and other goodies
Plug 'vim-ruby/vim-ruby'
" Rails integration
Plug 'tpope/vim-rails'
" -----------------------------------------------------------------------------
" NEARLEY
" -----------------------------------------------------------------------------
Plug 'andres-arana/vim-nearley'

call plug#end()

" *****************************************************************************
" INTERNAL MAPPINGS
" *****************************************************************************
" Use space as a leader alias
map <space> <leader>
" Remove annoying mappings
nnoremap <F1> <nop>
nnoremap K <nop>
" Fast macros
nnoremap Q @q
" Make Y consistent
nnoremap Y y$
" Formatting
nmap <leader>ff gg=G``<cr>
nmap <leader>f$ :%s/\s*$//g``<cr>

" *****************************************************************************
" VIM SETTINGS
" *****************************************************************************
" Allow backspacing over everything in insert mode
set backspace=indent,eol,start
" Show line numbers
set number
" Display tabs and trailing spaces
set list
set listchars=tab:▷⋅,trail:⋅,nbsp:⋅
" Search options
set incsearch
set smartcase
" Line wrapping
set wrap
set linebreak
" Turn off swap file, backups and other inconvenient files
set noswapfile
set nobackup
set nowb
" Undo settings
set undodir=~/.vim/undofiles
set undofile
" INfo file
set viminfo+=n~/.vim/viminfo
" Default indent settings
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
" Folding settings
set foldmethod=indent
set foldnestmax=3
set nofoldenable
" Wild list
set wildmode=list:longest
set wildmenu
set wildignore=*.o,*.obj,*~
" Vertical/horizontal scroll off settings
set scrolloff=3
set sidescrolloff=7
set sidescroll=1
" Load ftplugins and indent files
filetype plugin indent on
" Turn on syntax highlighting
syntax on
" Hide buffers when not displayed
set hidden
" Allow visual block mode on empty chars
set virtualedit=block
" Set unicode encoding
set encoding=utf-8
" Always display the status line
set laststatus=2
" Enable the cursorline
set cursorline
set cursorcolumn
" Enable case-ignoring search everywhere
set ignorecase
" UI settings and colorscheme
set go=
set gfn=Inconsolata\ 10
set t_Co=16
set background=dark
colorscheme solarized

