" *****************************************************************************
" PLUGINS
" *****************************************************************************
call plug#begin('~/.vim/plugged')
let g:plug_timeout=900
nnoremap <leader>pi :PlugInstall<cr>
nnoremap <leader>pu :PlugUpdate<cr>
nnoremap <leader>pg :PlugUpgrade<cr>
nnoremap <leader>pc :PlugClean<cr>

" -----------------------------------------------------------------------------
" GENERAL UTILITIES
" -----------------------------------------------------------------------------
" Paired mappings
Plug 'tpope/vim-unimpaired'
" Repeat complex commands with .
Plug 'tpope/vim-repeat'
" -----------------------------------------------------------------------------
" NAVIGATION
" -----------------------------------------------------------------------------
" Project explorer
Plug 'scrooloose/nerdtree'
let NERDTreeMinimalUI=1
let NERDTreeMapJumpNextSibling=''
let NERDTreeMapJumpPrevSibling=''
let NERDTreeAutoDeleteBuffer=0
let NERDTreeCascadeOpenSingleChildDir=0
let NERDTreeBookmarksFile=expand("$HOME/.vim/bookmarks")
" Improved % navigation matching
Plug 'vim-scripts/matchit.zip'
" Match HTML tags in % navigation
Plug 'gregsexton/MatchTag'
" Quick mark navigation
Plug 'kshenoy/vim-signature'
" Fuzzy finder and file jumper
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
let g:fzf_command_prefix = 'Fzf'
nnoremap <leader>zf :FzfFiles<cr>
nnoremap <leader>zg :FzfGFiles<cr>
nnoremap <leader>zs :FzfSnippets<cr>
nnoremap <leader>zc :FzfCommands<cr>
nnoremap <leader>zm :FzfMaps<cr>
" Code searching
Plug 'mileszs/ack.vim'
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
" Argument shuffling
Plug 'PeterRincker/vim-argumentative'
" -----------------------------------------------------------------------------
" UI
" -----------------------------------------------------------------------------
" Colorscheme
Plug 'altercation/vim-colors-solarized'
let g:solarized_termtrans = 1
" Powerfull status line
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
let g:airline_left_sep=''
let g:airline_right_sep=''
" Rainbow parentheses
Plug 'luochen1990/rainbow'
let g:rainbow_active = 1
let g:rainbow_conf = {
      \   'ctermfgs': ['darkred', 'darkgreen', 'darkyellow', 'darkblue', 'darkcyan', 'darkmagenta'],
      \}
" -----------------------------------------------------------------------------
" TMUX
" -----------------------------------------------------------------------------
" Easy tmux navigation
Plug 'christoomey/vim-tmux-navigator'
" Tmux commands
Plug 'benmills/vimux'
nnoremap <leader>vl :VimuxRunLastCommand<cr>
nnoremap <leader>vc :VimuxCloseRunner<cr>
nnoremap <leader>vi :VimuxInspectRuner<cr>
nnoremap <leader>vx :VimuxInterruptRunner<cr>
nnoremap <leader>vz :VimuxZoomRunner<cr>
nnoremap <leader>vp :VimuxPromptCommand<cr>
" -----------------------------------------------------------------------------
" TEXT EDITING
" -----------------------------------------------------------------------------
" Comment and uncomment code
Plug 'tpope/vim-commentary'
" Smart delimiters
Plug 'cohama/lexima.vim'
" Surround expressions
Plug 'tpope/vim-surround'
" Aligning
Plug 'junegunn/vim-easy-align'
nmap ga <Plug>(EasyAlign)
xmap ga <Plug>(EasyAlign)
" -----------------------------------------------------------------------------
" DEVELOPMENT
" -----------------------------------------------------------------------------
" Syntax checking on save
Plug 'w0rp/ale'
nnoremap <leader>ff :ALEFix<cr>
let g:ale_fixers = {
      \ 'javascript': [
      \     'eslint'
      \ ],
      \ 'json': [
      \     'jq'
      \ ]
      \}
" Completions
Plug 'Valloric/YouCompleteMe', {'do': './install.py'}
let g:ycm_key_list_select_completion = ['<C-n>']
let g:ycm_key_list_previous_completion = ['<C-p>']
let g:ycm_use_ultisnips_complete = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
set omnifunc=syntaxcomplete#Complete
" Snippets
Plug 'SirVer/ultisnips'
let g:UltiSnipsSnippetsDir = '~/.vim/ultisnips'
let g:UltiSnipsSnippetDirectories=['ultisnips']
let g:UltiSnipsEditSplit = 'context'
let g:UltiSnipsExpandTrigger = '<tab>'
let g:UltiSnipsJumpForwardTrigger = '<c-j>'
let g:UltiSnipsJumpBackwardTrigger = '<c-k>'
nnoremap <leader>s :UltiSnipsEdit<cr>
" Syntax pack
Plug 'sheerun/vim-polyglot'
let g:vim_markdown_conceal = 0
" Fast expansion for html tags
Plug 'mattn/emmet-vim'
let g:user_emmet_settings = {
      \  'javascript.jsx' : {
      \      'extends' : 'jsx',
      \  },
      \}
" -----------------------------------------------------------------------------
" OTHER SYNTAX PLUGINS
" -----------------------------------------------------------------------------
Plug 'tjvr/vim-nearley'
call plug#end()

" *****************************************************************************
" INTERNAL MAPPINGS
" *****************************************************************************
" Use space as a leader alias
map <space> <leader>
" Remove annoying mappings
nnoremap <F1> <nop>
nnoremap K <nop>
" Fast macros
nnoremap Q @q
" Make Y consistent
nnoremap Y y$
" Quickly edit vim settings
nnoremap <leader>ce :tabedit $MYVIMRC<cr>
nnoremap <leader>cr :so $MYVIMRC<cr>

" *****************************************************************************
" VIM SETTINGS
" *****************************************************************************
" Allow backspacing over everything in insert mode
set backspace=indent,eol,start
" Show line numbers
set number
" Display tabs and trailing spaces
set list
set listchars=tab:▷⋅,trail:⋅,nbsp:⋅
" Search options
set incsearch
set smartcase
" Line wrapping
set wrap
set linebreak
" Turn off swap file, backups and other inconvenient files
set noswapfile
set nobackup
set nowb
" Undo settings
set undodir=~/.vim/undofiles
set undofile
" INfo file
set viminfo+=n~/.vim/viminfo
" Default indent settings
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
" Folding settings
set foldmethod=indent
set foldnestmax=3
set nofoldenable
" Wild list
set wildmode=list:longest
set wildmenu
set wildignore=*.o,*.obj,*~
" Vertical/horizontal scroll off settings
set scrolloff=3
set sidescrolloff=7
set sidescroll=1
" Load ftplugins and indent files
filetype plugin indent on
" Turn on syntax highlighting
syntax on
" Hide buffers when not displayed
set hidden
" Allow visual block mode on empty chars
set virtualedit=block
" Set unicode encoding
set encoding=utf-8
" Always display the status line
set laststatus=2
" Enable the cursorline
set cursorline
set cursorcolumn
" Enable case-ignoring search everywhere
set ignorecase
" Enable source concealment
set conceallevel=2
" Disable the bell sounds
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=
" UI settings and colorscheme
set go=
set gfn=Inconsolata\ 10
set t_Co=16
set background=dark
colorscheme solarized

