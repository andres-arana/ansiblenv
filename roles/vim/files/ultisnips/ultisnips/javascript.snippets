snippet imp
import $1 from '$2';$0
endsnippet

snippet exp
export ${1:const $2 = $0};
endsnippet

snippet req
const $1 = require("${2:$1}");$0
endsnippet

snippet mod
module.exports = $0;
endsnippet

snippet fn
($1) => ${2:{
	$0
}}
endsnippet

snippet afn
async ($1) => ${2:{
	$0
}}
endsnippet

snippet ret
return ${0:${VISUAL}};
endsnippet

snippet case
case $1: {
	$0
}
endsnippet

snippet if
if ($1) {
	${0:${VISUAL}}
}
endsnippet

snippet ife
if ($$1) {
	$2
} else {
	$0
}
endsnippet

snippet swi
switch ($1) {
	$0
}
endsnippet

snippet try
try {
	${0:${VISUAL}}
} catch (${1:err}) {
	
}
endsnippet

snippet promise
new Promise((resolve, reject) => {
	$0
})
endsnippet

